{% extends ':base:base.html.twig' %}

{% block title %}Extension Validation Policy{% endblock title %}

{% block body %}
<div id="page-body">
	<ul class="linklist navlinks">
		<li><a href="{{ home_path }}">Home</a>
			<strong>&#8249;</strong> <a href="{{ customise_path }}">Customise phpBB</a>
			<strong>&#8249;</strong> <a href="{{ extensions_path }}">Extensions</a>
			<strong>&#8249;</strong> <a href="{{ extensions_rules }}">Rules and Policies</a>
			<strong>&#8249;</strong> <a href="{{ extensions_validation_policy }}">Validation Policy</a>
		</li>
	</ul>

	<div id="main">
		<h2 class="imgrep mods">Extension Validation Policy</h2>
		<p>The following policies should be followed when developing extensions for phpBB. This ensures consistent and quality code that is up to standards of phpBB. If you have any questions about any of the policies, feel free to discuss them in the <a href="{{ forum_extensions_31x_writers }}">Extension Writers Forum</a>.</p>

		<hr />

		<h2 class="title" id="general">General</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>
				<h3>Coding Guidelines</h3>
				The phpBB 3.1 <a href="{{ extensions_phpbb_cgs }}">Coding Guidelines</a> should be followed as much as possible. This means that all files should follow these guidelines, including PHP, JavaScript, and HTML files. This is to ensure maximum readability by the phpBB Extensions Team. Third-party libraries are the only exceptions and do not have to follow the coding guidelines. It is also required to use the English language for all table names, variable names and comments. The primary language for phpBB and extensions is English.
			</li>
			<li>
				<h3>Modifying phpBB Files</h3>
				No files that belong to the core phpBB package shall be modified in any way. Although the basis for all modifications in 3.0 was built on modifying phpBB's core files, extensions in 3.1 are intended to be self-contained and void of actual code changes to phpBB's core files. As such, no extension may require code changes to phpBB's core files.
			</li>
			<li>
				<h3>Composer:</h3>
				A <code class="inline">composer.json</code> file is required. Detailed information about this file can be found in the <a href="https://wiki.phpbb.com/Extension_meta_data">wiki</a>.
			</li>
			<li>
				<h3>Vendor Prefixing</h3>
				All events, services and routes in an extension should be prefixed with the extension's vendor name and package name, and contain only lowercase letters, numbers, dots, and underscores; e.g.:
				<ol type="a">
					<li>Events: <code class="inline">vendor.extension.custom_event</code></li>
					<li>Services: <code class="inline">vendor.extension.custom.service</code></li>
					<li>Routes: <code class="inline">vendor_extension_custom_route</code></li>
				</ol>
				<div class="note-box yellow"><strong>Note:</strong> It is forbidden to use <strong>phpbb</strong> or <strong>core</strong> to prefix events, services and routes.</div>
			</li>
			<li>
				<h3>Language and Styles</h3>
				Extensions including language files and/or style files should always provide files for the English language and Prosilver style, respectively.
			</li>
			<li>
				<h3>Privacy</h3>
				For privacy reasons it is not allowed to send private information (including but not limited to posts, user information, etc.) to any remote website or remote server. Any extension that does send information to a remote website or remote server will be denied for this reason. Exceptions to this rule, although rare, will be handled on a case-by-case basis.
			</li>
			<li>
				<h3>General</h3>
				<ol type="a">
					<li>Avoid using deprecated functions from phpBB 3.0. View updated functions in the <a href="https://wiki.phpbb.com/PhpBB3.1#Changes_to_Functions">wiki</a>.</li>
					<li>Tabs are used instead of spaces for indenting. A tab is defined as having a width of four spaces in this instance.</li>
					<li>Included third-party libraries should be up-to-date. They should be kept un-modified as much as possible. It is also preferred to use Composer to manage third-party libraries if possible.</li>
					<li>PHP files are saved as UTF-8 Encoded with UNIX line endings (LF).</li>
					<li>PHP files do not contain a (Byte Order Mark) BOM.</li>
				</ol>
			</li>
		</ol>

		<hr />

		<h2 class="title" id="php">PHP Files</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>Only functions that exist before and in PHP 5.3.3 may be used by default. If you want to use functions that were added in a later version of PHP you need to mention this requirement within the description.</li>
			<li>No un-initialised variables or indices.</li>
			<li>Proper file headers and php DocBlocks should be used.‬‬</li>
			<li>Braces <code class="inline">{</code> and <code class="inline">}</code> should be on newlines.</li>
			<li>Contain no ‪magic numbers‬‬. [<a href="https://wiki.phpbb.com/Magic_numbers">wiki</a>]</li>
			<li><code class="inline">IN_PHPBB</code> checks must be used in all included files, unless they contain only classes or interfaces. For example, function files and language files. [<a href="https://wiki.phpbb.com/IN_PHPBB">wiki</a>]</li>
			<li>The <code class="inline">$request->variable()</code> function is used instead of <code class="inline">$_POST</code>, <code class="inline">$_GET</code>, or <code class="inline">$_REQUEST</code> to get user input. [<a href="{{ extensions_phpbb_cgs }}#general">wiki</a>]</li>
			<li>Integer variables from <code class="inline">$request->variable()</code> are cast as integers using the form: <code class="inline">$request->variable('var', 0)</code> and not <code class="inline">$request->variable ('var', '0')</code>.</li>
			<li><code class="inline">$_SERVER</code> variables are properly sanitised (many <code class="inline">$_SERVER</code> indexes can be user manipulated). It is preferred to use <code class="inline">$request->server()</code> instead of <code class="inline">$_SERVER</code>, e.g.: <code class="inline">$request->server('REMOTE_ADDR')</code>, as these will be properly sanitised by the $request method.</li>
			<li>The $user object also contains several sanitised variables about the user, for example: <code class="inline">$user->ip</code> (user's REMOTE_ADDR) and <code class="inline">$user->page</code> (name of page currently viewed by user).</li>
			<li><a href="{{ extensions_phpbb_cgs }}#sql‬‬">phpBB3 DBAL</a> is used instead of database specific SQL functions.
				<ol type="a">
					<li>User-input string variables are properly sanitised using <code class="inline">$db->sql_escape()</code> when using variables in SQL queries. [<a href="https://wiki.phpbb.com/Dbal.sql_escape">wiki</a>]</li>
					<li>int and float variables are enforced by type-casting as (int) and (float) when inserting into SQL queries.</li>
					<li><code class="inline">$db->sql_build_query()</code> is used on large SQL queries (e.g.: if the query contains joins). [<a href="https://wiki.phpbb.com/Dbal.sql_build_query">wiki</a>]</li>
					<li><code class="inline">$db->sql_build_array()</code> is used on SQL INSERT and SQL UPDATE queries. [<a href="https://wiki.phpbb.com/Dbal.sql_build_array">wiki</a>]</li>
					<li><code class="inline">$db->sql_multi_insert()</code> is used when performing multiple SQL INSERT statements. [<a href="https://wiki.phpbb.com/Dbal.sql_multi_insert‬‬">wiki</a>]</li>
					<li><code class="inline">$db->sql_in_set()</code> is used for SQL IN() WHERE statements.‪ [<a href="https://wiki.phpbb.com/Dbal.sql_in_set">wiki</a>]</li>
					<li><code class="inline">$db->sql_query_limit()</code> is used instead of LIMIT in SQL queries. [<a href="https://wiki.phpbb.com/Dbal.sql_query_limit">wiki</a>]</li>
					<li>Static SQL queries should be cached.‪</li>
					<li>SQL queries within loops should be avoided.</li>
				</ol>
			</li>
			<li><code class="inline">helper->error()</code> and/or <code class="inline">trigger_error()</code> are used for error handling and user messages instead of <code class="inline">die()</code> or similar. [<a href="https://wiki.phpbb.com/Trigger_error">wiki</a>]</li>
			<li><code class="inline">login_forum_box()</code> or <code class="inline">login_box()</code> is used for login. [<a href="http://wiki.phpbb.com/Login_box">wiki</a>]</li>
			<li><code class="inline">confirm_box()</code> is used for the user to confirm sensitive actions (such as deleting items). [<a href="http://wiki.phpbb.com/Confirm_box">wiki</a>]</li>
			<li>URLs pointing to phpBB files call <code class="inline">append_sid()</code> to correctly append the session id. [<a href="http://wiki.phpbb.com/Append_sid">wiki</a>]</li>
		</ol>

		<hr />

		<h2 class="title" id="templates">Template Files</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>No hard-coded PHP in template files.</li>
			<li>All Prosilver HTML is valid HTML5 syntax.</li>
			<li>English language images are supplied as necessary.</li>
		</ol>

		<hr />

		<h2 class="title" id="migrations">Migrations</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>Database and permission changes should be handled with migrations. All subsequent database changes should be made in new migration files.</li>
			<li>Old migration files should never be altered or deleted.</li>
			<li>Extensions should never delete phpBB core tables or columns.</li>
		</ol>

		<hr />

		<h2 class="title" id="scripts">JavaScript and CSS</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>Include JavaScript files with the template function: <code class="inline">&lt;!-- INCLUDEJS --&gt;</code>. [<a href="https://wiki.phpbb.com/New_Template_Commands_in_3.1">wiki</a>]</li>
			<li>Include CSS files with the template function: <code class="inline">&lt;!-- INCLUDECSS --&gt;</code>. [<a href="https://wiki.phpbb.com/New_Template_Commands_in_3.1">wiki</a>]</li>
			<li>Included third-party JavaScript/CSS libraries and frameworks should utilise a special template <code class="inline">&lt;!-- DEFINE --&gt;</code> tag to prevent duplicate inclusion. For example:<br />
				<br />
					<pre class="codesnippet">
&lt;!-- IF not $INCLUDED_HIGHSLIDEJS --&gt;
    &lt;!-- INCLUDEJS highslide-full.js --&gt;
    &lt;!-- DEFINE $INCLUDED_HIGHSLIDEJS = true --&gt;
&lt;!-- ENDIF --&gt;</pre>
				Some example template variable definitions to use with common libraries:<br />
				<ol class="list-margin" type="a">
					<li>HighSlide JS: <code class="inline">$INCLUDED_HIGHSLIDEJS</code></li>
					<li>Font Awesome CSS: <code class="inline">$INCLUDED_FONTAWESOMECSS</code></li>
					<li>ColorBox JS: <code class="inline">$INCLUDED_COLORBOXJS</code></li>
					<li>ColPick JS: <code class="inline">$INCLUDED_COLPICKJS</code></li>
					<li>MoTools JS: <code class="inline">$INCLUDED_MOTOOLSJS</code></li>
					<li>Dojo JS: <code class="inline">$INCLUDED_DOJOJS</code></li>
				</ol>
				<div class="note-box blue"><strong>Note:</strong> The common practice should be to name the variable definition after the library filename, e.g.: <samp>highslide.js</samp> becomes <samp>HIGHSLIDEJS</samp>.</div>
			</li>
		</ol>

		<hr />

		<h2 class="title" id="licenses">Licenses</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>Extensions should be released under GPL v2. Included frameworks should use GPL v2 or a compatible license. See <a href="http://www.gnu.org/licenses/gpl-faq.html#AllCompatibility">http://www.gnu.org/licenses/gpl-faq.html#AllCompatibility</a></li>
			<li>A <code class="inline">license.txt</code> file should be included in the root directory of the extension.</li>
		</ol>

		<hr />

		<h2 class="title" id="packaging">Packaging and Version</h2>
		<ol class="list-margin" style="line-height:1.5em;">
			<li>Extensions are packaged as follows:
				<pre class="codesnippet">/vendorname/extensionname/</pre>
				The names should be alphanumeric. (No dashes or underscores. Capitals are allowed.) For example, the following common extension files, <code class="inline">composer.json</code>, <code class="inline">ext.php</code> and <code class="inline">license.txt</code> would be located at:
				<pre class="codesnippet">/vendorname/extensionname/composer.json
/vendorname/extensionname/ext.php
/vendorname/extensionname/license.txt</pre>
				<div class="note-box blue"><img src="{{ THEME_PATH }}/images/icon-dl-zip.gif" width="20" height="21" style="vertical-align: middle;" alt="Download phpBB 3.0.12 (zip)"> <a href="{{ extension_quickstart_zip }}">Extension QuickStart</a> is an available package with starter <samp>composer.json</samp> and <samp>ext.php</samp> files and the required <samp>license.txt</samp>.</div>
			</li>
			<li>Semantic version numbers should be used. Only stable versions are allowed in the Extension Database. For every update the version number should be increased.</li>
			<li>Language files are within the language directory and correct lang_name (ISO) translations are used. Template and theme files are contained in their respective directories.</li>
		</ol>
		<br />
	</div>

	<div id="extras">
		{{ include('PhpbbWebsiteInterfaceBundle:Extensions:menu.html.twig') }}
		<div class="mini-panel js-sections js-scroll" style="display: none"></div>
	</div>
</div>
{% endblock %}
